version: '3.9'
services:
  backend:
    image: backend:latest
    environment:
      - RUN_MODE=DEV
      - PORT=8080
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/
      - GCP_CREDENTIALS=${GCP_CREDENTIALS}
      - EVENTS_BUCKET=${EVENTS_BUCKET}
      - WORKS_BUCKET=${WORKS_BUCKET}
      - CERTIFICATES_BUCKET=${CERTIFICATES_BUCKET}
      - USERS_BUCKET=${USERS_BUCKET}
      - PUBLIC_BASE_URL=${PUBLIC_BASE_URL}
      - TYPE_STORAGE=${TYPE_STORAGE}
      - NOTIFICATIONS_EMAIL_PASSWORD=${NOTIFICATIONS_EMAIL_PASSWORD}
      - NOTIFICATIONS_EMAIL=${NOTIFICATIONS_EMAIL}
      - ENABLE_SEND_EMAILS=${ENABLE_SEND_EMAILS}
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - ./app:/code/app
      - ./tests:/code/test
    ports:
      - "8080:8080"
    command: uvicorn app.main:app --host=0.0.0.0 --port=8080 --reload

    restart: on-failure
    networks:
      - eventito-dev-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PG_USER=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - eventito-dev-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  eventito-dev-network:
    name: eventito-dev-network
    external: true
